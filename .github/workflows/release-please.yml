name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      version: ${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}
      upload_url: ${{ steps.release.outputs.upload_url }}

    steps:
      - name: Run release-please
        id: release
        uses: googleapis/release-please-action@v4
        with:
          release-type: node

  publish-extension:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Update manifest version
        run: |
          cd chrome-extension
          VERSION="${{ needs.release-please.outputs.version }}"
          jq --arg version "$VERSION" '.version = $version' manifest.json > manifest.tmp
          mv manifest.tmp manifest.json
          echo "Updated manifest.json to version $VERSION"

      - name: Commit manifest version
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add chrome-extension/manifest.json
          git commit -m "chore: update manifest version to ${{ needs.release-please.outputs.version }}"
          git push

      - name: Validate extension
        run: npm run validate

      - name: Build extension
        run: npm run build

      - name: Upload & publish to Chrome Web Store
        uses: mnao305/chrome-extension-upload@v5.0.0
        with:
          file-path: dist/ananasit-extension.zip
          extension-id: ${{ secrets.EXTENSION_ID }}
          client-id: ${{ secrets.CLIENT_ID }}
          client-secret: ${{ secrets.CLIENT_SECRET }}
          refresh-token: ${{ secrets.REFRESH_TOKEN }}
          publish: true
          publish-target: trustedTesters

      - name: Upload ZIP to GitHub Release
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh release upload ${{ needs.release-please.outputs.tag_name }} \
            dist/ananasit-extension.zip \
            --clobber
